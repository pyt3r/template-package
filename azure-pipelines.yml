# template pipeline for template python package

trigger:
  - master
  - release-pipeline

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.7'

pool:
  vmImage: $(imageName)

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
    displayName: 'Use Python $(pythonVersion)'

  - script: |
      export PACKAGE_NAME=template
      export CONDA_BUILD=conda-build
      echo "##vso[task.setvariable variable=PACKAGE_NAME]$PACKAGE_NAME"
      echo "##vso[task.setvariable variable=CONDA_BUILD]$CONDA_BUILD"
    displayName: Set environment variable

  - script: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - script: |
      conda env create --quiet --file ci/test-env-requirements.yml python=$(pythonVersion)
    displayName: Create a conda test env

  - script: |
      source activate test-env
      mkdir ../$(CONDA_BUILD)
      conda build . --output-folder=../$(CONDA_BUILD)
      conda install ../builds/**/*.tar.bz2
    displayName: Build and add package to test env

  - script: |
      source activate test-env
      cd tests
      coverage run -m --include=**/$(PACKAGE_NAME)/* --omit=**/test_*.py unittest discover .
      coverage report -m
      coverage html
      coverage xml
    displayName: Run tests against the package

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/../$(CONDA_BUILD)
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: '$(CONDA_BUILD)'
      publishLocation: 'Container'